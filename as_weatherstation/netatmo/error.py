def NetatmoHTTPErrorHandler(e, error_logger = None):
	""" Handler for HTTPError generated by the Netatmo API (usually fatal) """
	""" e urllib2.HTTPError """
	""" error_logger as_ws.log.error.logger optional """

	caller = getStackInfo(1)
	response = e.read()
	print 'The server couldn\'t fulfill request to'
	print e.geturl()
	print 'Error code: ', e.code
	print 'Error code: ', e.reason
	print 'Contents: ', response
	print 'File: %s line %d' % (caller['file'], caller['line'])

	if not error_logger == None:
		import logging
		if isinstance(error_logger, logging.Logger):
			error_logger.error('HTTPError %s %s - Netatmo.authorization failed with response "%.40s"', e.code, e.reason, response)

	exit()

def getStackInfo(back=0):
	""" Get information for a point in the stack """	
	""" back int - 0 to get the line of the caller, 1 to get the line of the previous caller, etc. """
	import inspect
	callerframerecord = inspect.stack()[1+back]     # 0 represents this line
																									# 1 represents line at caller
																									# 2 represents line at caller's caller
	frame = callerframerecord[0]
	info = inspect.getframeinfo(frame)
	return {'file': info.filename, 'function': info.function, 'line': info.lineno}
